A visualização de um diff entre duas versões de um arquivo ajuda a ver o bug que foi introduzido ao analisar ambas e mostrar somente suas diferenças.
O fácil acesso a todo o histórico de um arquivo possibilita a análise de seus erros e evoluções, facilitando o aprendizado e ajudando o programador a tornar-se mais eficiente a longo prazo.
Git (salva os commits manualmente) x Google Docs (salva automaticamente): Ao salvar manualmente cada commit, os prós do Git são: poder escolher o tamanho de cada commit e quando salvar, além de escrever uma breve descrição de cada um, facilitando a identificação. No entanto, é fundamental que o autor de cada commit nunca se esqueça de salvá-lo; caso contrário, o trabalho seria perdido.
Acredito que alguns sistemas de controle de versão (como o Git) permitem salvar vários arquivos em um commit para que seja possível organizar o código em várias 'camadas', como um único móvel com várias gavetas. Entretanto, outros preferem tratar cada arquivo separadamente, como um móvel específico pra um item específico. 
git log: exibe uma lista dos commits recentes com informações sobre eles (IDs, autor, descrição). git diff: compara duas versões do código nesses commits (para isso deve ser seguido por dois IDs, que podem ser escritos inteiros ou com apenas os 4 algarismos iniciais)
Ao salvar os commits com suas descrições e informações, o controle de versão transmite maior segurança para fazer alterações que podem danificar algo. Por exemplo, depois de um determinado programa estar pronto você percebe que há um bug, mas não lembra em qual commit ele apareceu, dessa forma é possível fazer o checkout de commits anteriores e testar para encontrar o problema.
Meu objetivo é aprender a usar o Git para colaborar com o time RoboFei, além de crescer profissionalmente.